// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AggregateBuilder mysql basic queries avg 1`] = `"select json_object('avg', json_object('rentalRate', coalesce(avg(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries avg 2`] = `Array []`;

exports[`AggregateBuilder mysql basic queries count 1`] = `"select json_object('count', coalesce(count(\`f1\`.\`film_id\`), 0)) as \`agg\` from (select \`f2\`.\`film_id\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries count 2`] = `Array []`;

exports[`AggregateBuilder mysql basic queries max 1`] = `"select json_object('max', json_object('title', max(\`f1\`.\`title\`))) as \`agg\` from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries max 2`] = `Array []`;

exports[`AggregateBuilder mysql basic queries min 1`] = `"select json_object('min', json_object('title', min(\`f1\`.\`title\`))) as \`agg\` from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries min 2`] = `Array []`;

exports[`AggregateBuilder mysql basic queries multiple functions 1`] = `"select json_object('max', json_object('title', max(\`f1\`.\`title\`), 'description', max(\`f1\`.\`description\`)), 'count', coalesce(count(\`f1\`.\`film_id\`), 0), 'avg', json_object('rentalDuration', coalesce(avg(\`f1\`.\`rental_duration\`), 0))) as \`agg\` from (select \`f2\`.\`title\`, \`f2\`.\`description\`, \`f2\`.\`film_id\`, \`f2\`.\`rental_duration\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries multiple functions 2`] = `Array []`;

exports[`AggregateBuilder mysql basic queries sum 1`] = `"select json_object('sum', json_object('replacementCost', coalesce(sum(\`f1\`.\`replacement_cost\`), 0))) as \`agg\` from (select \`f2\`.\`replacement_cost\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql basic queries sum 2`] = `Array []`;

exports[`AggregateBuilder mysql limit with number 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ?) as \`f1\`"`;

exports[`AggregateBuilder mysql limit with number 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder mysql offset with number 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit 18446744073709551615 offset ?) as \`f1\`"`;

exports[`AggregateBuilder mysql offset with number 2`] = `
Array [
  20,
]
`;

exports[`AggregateBuilder mysql orderBy with association (aggregate and through) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by (select min(\`a1\`.\`last_update\`) as \`min\` from \`film_actor\` as \`f3\` inner join \`actor\` as \`a1\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\` group by \`f3\`.\`film_id\`) asc) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with association (aggregate and through) 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with association (aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` order by (select avg(\`f1\`.\`replacement_cost\`) as \`avg\` from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\`) asc) as \`l1\`"`;

exports[`AggregateBuilder mysql orderBy with association (aggregate) 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with association (count) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` order by (select count(\`f1\`.\`film_id\`) as \`count\` from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\`) asc) as \`l1\`"`;

exports[`AggregateBuilder mysql orderBy with association (count) 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with association (field) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by (select \`l1\`.\`name\` from \`language\` as \`l1\` where \`f2\`.\`language_id\` = \`l1\`.\`language_id\`) asc) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with association (field) 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with empty object 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with empty object 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with multiple fields 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`film_id\` asc, \`f2\`.\`last_update\` asc) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with multiple fields 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with no fields 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with no fields 2`] = `Array []`;

exports[`AggregateBuilder mysql orderBy with one field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`"`;

exports[`AggregateBuilder mysql orderBy with one field 2`] = `Array []`;

exports[`AggregateBuilder mysql where and 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where ((\`f2\`.\`title\` = ?) and (\`f2\`.\`description\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder mysql where and 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder mysql where equals null 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` is null) as \`f1\`"`;

exports[`AggregateBuilder mysql where equals null 2`] = `Array []`;

exports[`AggregateBuilder mysql where merge 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`"`;

exports[`AggregateBuilder mysql where merge 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder mysql where not 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (not (\`f2\`.\`title\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder mysql where not 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder mysql where notEqual null 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` is not null) as \`f1\`"`;

exports[`AggregateBuilder mysql where notEqual null 2`] = `Array []`;

exports[`AggregateBuilder mysql where or 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where ((\`f2\`.\`title\` = ?) or (\`f2\`.\`description\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder mysql where or 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder mysql where with association (aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\` having avg(\`f1\`.\`replacement_cost\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder mysql where with association (aggregate) 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder mysql where with association (both field and aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and \`f1\`.\`title\` = ? group by \`f1\`.\`language_id\` having avg(\`f1\`.\`replacement_cost\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder mysql where with association (both field and aggregate) 2`] = `
Array [
  "BEAR GRACELAND",
  20,
]
`;

exports[`AggregateBuilder mysql where with association (count) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\` having count(\`f1\`.\`film_id\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder mysql where with association (count) 2`] = `
Array [
  1,
]
`;

exports[`AggregateBuilder mysql where with association (multi) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and \`f1\`.\`title\` = ? group by \`f1\`.\`language_id\`))) as \`l1\`"`;

exports[`AggregateBuilder mysql where with association (multi) 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder mysql where with association (single) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (exists (select null from \`language\` as \`l1\` where \`f2\`.\`language_id\` = \`l1\`.\`language_id\` and \`l1\`.\`name\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder mysql where with association (single) 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder mysql where with association (through) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (exists (select null from \`actor\` as \`a1\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\` and \`a1\`.\`first_name\` = ? group by \`f3\`.\`actor_id\`))) as \`f1\`"`;

exports[`AggregateBuilder mysql where with association (through) 2`] = `
Array [
  "BOB",
]
`;

exports[`AggregateBuilder mysql where with empty object 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql where with empty object 2`] = `Array []`;

exports[`AggregateBuilder mysql where with extra operators 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`"`;

exports[`AggregateBuilder mysql where with extra operators 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder mysql where with nested association 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and (exists (select null from \`language\` as \`l3\` where \`f1\`.\`language_id\` = \`l3\`.\`language_id\` and \`l3\`.\`name\` = ?)) group by \`f1\`.\`language_id\`))) as \`l1\`"`;

exports[`AggregateBuilder mysql where with nested association 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder mysql where with non-existent field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder mysql where with non-existent field 2`] = `Array []`;

exports[`AggregateBuilder mysql where with one field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`"`;

exports[`AggregateBuilder mysql where with one field 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder mysql where with two field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`"`;

exports[`AggregateBuilder mysql where with two field 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder postgres basic queries avg 1`] = `"select json_build_object('avg', json_build_object('rentalRate', coalesce(avg(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries avg 2`] = `Array []`;

exports[`AggregateBuilder postgres basic queries count 1`] = `"select json_build_object('count', coalesce(count(\\"f1\\".\\"film_id\\"), 0)) as \\"agg\\" from (select \\"f2\\".\\"film_id\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries count 2`] = `Array []`;

exports[`AggregateBuilder postgres basic queries max 1`] = `"select json_build_object('max', json_build_object('title', max(\\"f1\\".\\"title\\"))) as \\"agg\\" from (select \\"f2\\".\\"title\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries max 2`] = `Array []`;

exports[`AggregateBuilder postgres basic queries min 1`] = `"select json_build_object('min', json_build_object('title', min(\\"f1\\".\\"title\\"))) as \\"agg\\" from (select \\"f2\\".\\"title\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries min 2`] = `Array []`;

exports[`AggregateBuilder postgres basic queries multiple functions 1`] = `"select json_build_object('max', json_build_object('title', max(\\"f1\\".\\"title\\"), 'description', max(\\"f1\\".\\"description\\")), 'count', coalesce(count(\\"f1\\".\\"film_id\\"), 0), 'avg', json_build_object('rentalDuration', coalesce(avg(\\"f1\\".\\"rental_duration\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"title\\", \\"f2\\".\\"description\\", \\"f2\\".\\"film_id\\", \\"f2\\".\\"rental_duration\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries multiple functions 2`] = `Array []`;

exports[`AggregateBuilder postgres basic queries sum 1`] = `"select json_build_object('sum', json_build_object('replacementCost', coalesce(sum(\\"f1\\".\\"replacement_cost\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"replacement_cost\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres basic queries sum 2`] = `Array []`;

exports[`AggregateBuilder postgres limit with number 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" limit ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres limit with number 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder postgres offset with number 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" offset ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres offset with number 2`] = `
Array [
  20,
]
`;

exports[`AggregateBuilder postgres orderBy with association (aggregate and through) 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" order by (select min(\\"a1\\".\\"last_update\\") as \\"min\\" from \\"film_actor\\" as \\"f3\\" inner join \\"actor\\" as \\"a1\\" on \\"f3\\".\\"actor_id\\" = \\"a1\\".\\"actor_id\\" where \\"f2\\".\\"film_id\\" = \\"f3\\".\\"film_id\\" group by \\"f3\\".\\"film_id\\") asc) as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with association (aggregate and through) 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with association (aggregate) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" order by (select avg(\\"f1\\".\\"replacement_cost\\") as \\"avg\\" from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" group by \\"f1\\".\\"language_id\\") asc) as \\"l1\\""`;

exports[`AggregateBuilder postgres orderBy with association (aggregate) 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with association (count) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" order by (select count(\\"f1\\".\\"film_id\\") as \\"count\\" from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" group by \\"f1\\".\\"language_id\\") asc) as \\"l1\\""`;

exports[`AggregateBuilder postgres orderBy with association (count) 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with association (field) 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" order by (select \\"l1\\".\\"name\\" from \\"language\\" as \\"l1\\" where \\"f2\\".\\"language_id\\" = \\"l1\\".\\"language_id\\") asc) as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with association (field) 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with empty object 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with empty object 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with multiple fields 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" order by \\"f2\\".\\"film_id\\" asc, \\"f2\\".\\"last_update\\" asc) as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with multiple fields 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with no fields 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with no fields 2`] = `Array []`;

exports[`AggregateBuilder postgres orderBy with one field 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" order by \\"f2\\".\\"title\\" asc) as \\"f1\\""`;

exports[`AggregateBuilder postgres orderBy with one field 2`] = `Array []`;

exports[`AggregateBuilder postgres where and 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where ((\\"f2\\".\\"title\\" = ?) and (\\"f2\\".\\"description\\" = ?))) as \\"f1\\""`;

exports[`AggregateBuilder postgres where and 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder postgres where equals null 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" is null) as \\"f1\\""`;

exports[`AggregateBuilder postgres where equals null 2`] = `Array []`;

exports[`AggregateBuilder postgres where merge 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ? and \\"f2\\".\\"description\\" = ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres where merge 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder postgres where not 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where (not (\\"f2\\".\\"title\\" = ?))) as \\"f1\\""`;

exports[`AggregateBuilder postgres where not 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder postgres where notEqual null 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" is not null) as \\"f1\\""`;

exports[`AggregateBuilder postgres where notEqual null 2`] = `Array []`;

exports[`AggregateBuilder postgres where or 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where ((\\"f2\\".\\"title\\" = ?) or (\\"f2\\".\\"description\\" = ?))) as \\"f1\\""`;

exports[`AggregateBuilder postgres where or 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder postgres where with association (aggregate) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" where (exists (select null from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" group by \\"f1\\".\\"language_id\\" having avg(\\"f1\\".\\"replacement_cost\\") > ?))) as \\"l1\\""`;

exports[`AggregateBuilder postgres where with association (aggregate) 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder postgres where with association (both field and aggregate) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" where (exists (select null from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" and \\"f1\\".\\"title\\" = ? group by \\"f1\\".\\"language_id\\" having avg(\\"f1\\".\\"replacement_cost\\") > ?))) as \\"l1\\""`;

exports[`AggregateBuilder postgres where with association (both field and aggregate) 2`] = `
Array [
  "BEAR GRACELAND",
  20,
]
`;

exports[`AggregateBuilder postgres where with association (count) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" where (exists (select null from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" group by \\"f1\\".\\"language_id\\" having count(\\"f1\\".\\"film_id\\") > ?))) as \\"l1\\""`;

exports[`AggregateBuilder postgres where with association (count) 2`] = `
Array [
  1,
]
`;

exports[`AggregateBuilder postgres where with association (multi) 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" where (exists (select null from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" and \\"f1\\".\\"title\\" = ? group by \\"f1\\".\\"language_id\\"))) as \\"l1\\""`;

exports[`AggregateBuilder postgres where with association (multi) 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder postgres where with association (single) 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where (exists (select null from \\"language\\" as \\"l1\\" where \\"f2\\".\\"language_id\\" = \\"l1\\".\\"language_id\\" and \\"l1\\".\\"name\\" = ?))) as \\"f1\\""`;

exports[`AggregateBuilder postgres where with association (single) 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder postgres where with association (through) 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where (exists (select null from \\"actor\\" as \\"a1\\" inner join \\"film_actor\\" as \\"f3\\" on \\"f3\\".\\"actor_id\\" = \\"a1\\".\\"actor_id\\" where \\"f2\\".\\"film_id\\" = \\"f3\\".\\"film_id\\" and \\"a1\\".\\"first_name\\" = ? group by \\"f3\\".\\"actor_id\\"))) as \\"f1\\""`;

exports[`AggregateBuilder postgres where with association (through) 2`] = `
Array [
  "BOB",
]
`;

exports[`AggregateBuilder postgres where with empty object 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres where with empty object 2`] = `Array []`;

exports[`AggregateBuilder postgres where with extra operators 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres where with extra operators 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder postgres where with nested association 1`] = `"select json_build_object('max', json_build_object('name', max(\\"l1\\".\\"name\\"))) as \\"agg\\" from (select \\"l2\\".\\"name\\" from \\"language\\" as \\"l2\\" where (exists (select null from \\"film\\" as \\"f1\\" where \\"l2\\".\\"language_id\\" = \\"f1\\".\\"language_id\\" and (exists (select null from \\"language\\" as \\"l3\\" where \\"f1\\".\\"language_id\\" = \\"l3\\".\\"language_id\\" and \\"l3\\".\\"name\\" = ?)) group by \\"f1\\".\\"language_id\\"))) as \\"l1\\""`;

exports[`AggregateBuilder postgres where with nested association 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder postgres where with non-existent field 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\""`;

exports[`AggregateBuilder postgres where with non-existent field 2`] = `Array []`;

exports[`AggregateBuilder postgres where with one field 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres where with one field 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder postgres where with two field 1`] = `"select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) as \\"agg\\" from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ? and \\"f2\\".\\"description\\" = ?) as \\"f1\\""`;

exports[`AggregateBuilder postgres where with two field 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder sqlite basic queries avg 1`] = `"select json_object('avg', json_object('rentalRate', coalesce(avg(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries avg 2`] = `Array []`;

exports[`AggregateBuilder sqlite basic queries count 1`] = `"select json_object('count', coalesce(count(\`f1\`.\`film_id\`), 0)) as \`agg\` from (select \`f2\`.\`film_id\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries count 2`] = `Array []`;

exports[`AggregateBuilder sqlite basic queries max 1`] = `"select json_object('max', json_object('title', max(\`f1\`.\`title\`))) as \`agg\` from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries max 2`] = `Array []`;

exports[`AggregateBuilder sqlite basic queries min 1`] = `"select json_object('min', json_object('title', min(\`f1\`.\`title\`))) as \`agg\` from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries min 2`] = `Array []`;

exports[`AggregateBuilder sqlite basic queries multiple functions 1`] = `"select json_object('max', json_object('title', max(\`f1\`.\`title\`), 'description', max(\`f1\`.\`description\`)), 'count', coalesce(count(\`f1\`.\`film_id\`), 0), 'avg', json_object('rentalDuration', coalesce(avg(\`f1\`.\`rental_duration\`), 0))) as \`agg\` from (select \`f2\`.\`title\`, \`f2\`.\`description\`, \`f2\`.\`film_id\`, \`f2\`.\`rental_duration\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries multiple functions 2`] = `Array []`;

exports[`AggregateBuilder sqlite basic queries sum 1`] = `"select json_object('sum', json_object('replacementCost', coalesce(sum(\`f1\`.\`replacement_cost\`), 0))) as \`agg\` from (select \`f2\`.\`replacement_cost\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite basic queries sum 2`] = `Array []`;

exports[`AggregateBuilder sqlite limit with number 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite limit with number 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder sqlite offset with number 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ? offset ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite offset with number 2`] = `
Array [
  -1,
  20,
]
`;

exports[`AggregateBuilder sqlite orderBy with association (aggregate and through) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by (select min(\`a1\`.\`last_update\`) as \`min\` from \`film_actor\` as \`f3\` inner join \`actor\` as \`a1\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\` group by \`f3\`.\`film_id\`) asc) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with association (aggregate and through) 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with association (aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` order by (select avg(\`f1\`.\`replacement_cost\`) as \`avg\` from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\`) asc) as \`l1\`"`;

exports[`AggregateBuilder sqlite orderBy with association (aggregate) 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with association (count) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` order by (select count(\`f1\`.\`film_id\`) as \`count\` from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\`) asc) as \`l1\`"`;

exports[`AggregateBuilder sqlite orderBy with association (count) 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with association (field) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by (select \`l1\`.\`name\` from \`language\` as \`l1\` where \`f2\`.\`language_id\` = \`l1\`.\`language_id\`) asc) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with association (field) 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with empty object 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with empty object 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with multiple fields 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`film_id\` asc, \`f2\`.\`last_update\` asc) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with multiple fields 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with no fields 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with no fields 2`] = `Array []`;

exports[`AggregateBuilder sqlite orderBy with one field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`"`;

exports[`AggregateBuilder sqlite orderBy with one field 2`] = `Array []`;

exports[`AggregateBuilder sqlite where and 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where ((\`f2\`.\`title\` = ?) and (\`f2\`.\`description\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder sqlite where and 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder sqlite where equals null 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` is null) as \`f1\`"`;

exports[`AggregateBuilder sqlite where equals null 2`] = `Array []`;

exports[`AggregateBuilder sqlite where merge 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite where merge 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder sqlite where not 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (not (\`f2\`.\`title\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder sqlite where not 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder sqlite where notEqual null 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` is not null) as \`f1\`"`;

exports[`AggregateBuilder sqlite where notEqual null 2`] = `Array []`;

exports[`AggregateBuilder sqlite where or 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where ((\`f2\`.\`title\` = ?) or (\`f2\`.\`description\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder sqlite where or 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`AggregateBuilder sqlite where with association (aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\` having avg(\`f1\`.\`replacement_cost\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder sqlite where with association (aggregate) 2`] = `
Array [
  10,
]
`;

exports[`AggregateBuilder sqlite where with association (both field and aggregate) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and \`f1\`.\`title\` = ? group by \`f1\`.\`language_id\` having avg(\`f1\`.\`replacement_cost\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder sqlite where with association (both field and aggregate) 2`] = `
Array [
  "BEAR GRACELAND",
  20,
]
`;

exports[`AggregateBuilder sqlite where with association (count) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` group by \`f1\`.\`language_id\` having count(\`f1\`.\`film_id\`) > ?))) as \`l1\`"`;

exports[`AggregateBuilder sqlite where with association (count) 2`] = `
Array [
  1,
]
`;

exports[`AggregateBuilder sqlite where with association (multi) 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and \`f1\`.\`title\` = ? group by \`f1\`.\`language_id\`))) as \`l1\`"`;

exports[`AggregateBuilder sqlite where with association (multi) 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder sqlite where with association (single) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (exists (select null from \`language\` as \`l1\` where \`f2\`.\`language_id\` = \`l1\`.\`language_id\` and \`l1\`.\`name\` = ?))) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with association (single) 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder sqlite where with association (through) 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where (exists (select null from \`actor\` as \`a1\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\` and \`a1\`.\`first_name\` = ? group by \`f3\`.\`actor_id\`))) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with association (through) 2`] = `
Array [
  "BOB",
]
`;

exports[`AggregateBuilder sqlite where with empty object 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with empty object 2`] = `Array []`;

exports[`AggregateBuilder sqlite where with extra operators 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with extra operators 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder sqlite where with nested association 1`] = `"select json_object('max', json_object('name', max(\`l1\`.\`name\`))) as \`agg\` from (select \`l2\`.\`name\` from \`language\` as \`l2\` where (exists (select null from \`film\` as \`f1\` where \`l2\`.\`language_id\` = \`f1\`.\`language_id\` and (exists (select null from \`language\` as \`l3\` where \`f1\`.\`language_id\` = \`l3\`.\`language_id\` and \`l3\`.\`name\` = ?)) group by \`f1\`.\`language_id\`))) as \`l1\`"`;

exports[`AggregateBuilder sqlite where with nested association 2`] = `
Array [
  "English",
]
`;

exports[`AggregateBuilder sqlite where with non-existent field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with non-existent field 2`] = `Array []`;

exports[`AggregateBuilder sqlite where with one field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with one field 2`] = `
Array [
  "FILM",
]
`;

exports[`AggregateBuilder sqlite where with two field 1`] = `"select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) as \`agg\` from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`"`;

exports[`AggregateBuilder sqlite where with two field 2`] = `
Array [
  "FILM",
  "description",
]
`;
